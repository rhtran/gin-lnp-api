// Code generated by protoc-gen-go. DO NOT EDIT.
// source: lrn.proto

package grlrn

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DidReq struct {
	Did                  string   `protobuf:"bytes,1,opt,name=did,proto3" json:"did,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DidReq) Reset()         { *m = DidReq{} }
func (m *DidReq) String() string { return proto.CompactTextString(m) }
func (*DidReq) ProtoMessage()    {}
func (*DidReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_lrn_4ffe75f8116196f6, []int{0}
}
func (m *DidReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DidReq.Unmarshal(m, b)
}
func (m *DidReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DidReq.Marshal(b, m, deterministic)
}
func (dst *DidReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DidReq.Merge(dst, src)
}
func (m *DidReq) XXX_Size() int {
	return xxx_messageInfo_DidReq.Size(m)
}
func (m *DidReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DidReq.DiscardUnknown(m)
}

var xxx_messageInfo_DidReq proto.InternalMessageInfo

func (m *DidReq) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

type DidsReq struct {
	Dids                 []string `protobuf:"bytes,1,rep,name=dids,proto3" json:"dids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DidsReq) Reset()         { *m = DidsReq{} }
func (m *DidsReq) String() string { return proto.CompactTextString(m) }
func (*DidsReq) ProtoMessage()    {}
func (*DidsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_lrn_4ffe75f8116196f6, []int{1}
}
func (m *DidsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DidsReq.Unmarshal(m, b)
}
func (m *DidsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DidsReq.Marshal(b, m, deterministic)
}
func (dst *DidsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DidsReq.Merge(dst, src)
}
func (m *DidsReq) XXX_Size() int {
	return xxx_messageInfo_DidsReq.Size(m)
}
func (m *DidsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DidsReq.DiscardUnknown(m)
}

var xxx_messageInfo_DidsReq proto.InternalMessageInfo

func (m *DidsReq) GetDids() []string {
	if m != nil {
		return m.Dids
	}
	return nil
}

type LrnRes struct {
	Did                  string   `protobuf:"bytes,1,opt,name=did,proto3" json:"did,omitempty"`
	Lrn                  string   `protobuf:"bytes,2,opt,name=lrn,proto3" json:"lrn,omitempty"`
	Ocn                  string   `protobuf:"bytes,3,opt,name=ocn,proto3" json:"ocn,omitempty"`
	Ptype                string   `protobuf:"bytes,4,opt,name=ptype,proto3" json:"ptype,omitempty"`
	Bname                string   `protobuf:"bytes,5,opt,name=bname,proto3" json:"bname,omitempty"`
	Company              string   `protobuf:"bytes,6,opt,name=company,proto3" json:"company,omitempty"`
	City                 string   `protobuf:"bytes,7,opt,name=city,proto3" json:"city,omitempty"`
	St                   string   `protobuf:"bytes,8,opt,name=st,proto3" json:"st,omitempty"`
	Ct                   string   `protobuf:"bytes,9,opt,name=ct,proto3" json:"ct,omitempty"`
	Zips                 []string `protobuf:"bytes,10,rep,name=zips,proto3" json:"zips,omitempty"`
	Tz                   string   `protobuf:"bytes,11,opt,name=tz,proto3" json:"tz,omitempty"`
	Dst                  string   `protobuf:"bytes,12,opt,name=dst,proto3" json:"dst,omitempty"`
	Lat                  string   `protobuf:"bytes,13,opt,name=lat,proto3" json:"lat,omitempty"`
	Long                 string   `protobuf:"bytes,14,opt,name=long,proto3" json:"long,omitempty"`
	Lnp                  int64    `protobuf:"varint,15,opt,name=lnp,proto3" json:"lnp,omitempty"`
	Lu                   string   `protobuf:"bytes,16,opt,name=lu,proto3" json:"lu,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LrnRes) Reset()         { *m = LrnRes{} }
func (m *LrnRes) String() string { return proto.CompactTextString(m) }
func (*LrnRes) ProtoMessage()    {}
func (*LrnRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_lrn_4ffe75f8116196f6, []int{2}
}
func (m *LrnRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LrnRes.Unmarshal(m, b)
}
func (m *LrnRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LrnRes.Marshal(b, m, deterministic)
}
func (dst *LrnRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LrnRes.Merge(dst, src)
}
func (m *LrnRes) XXX_Size() int {
	return xxx_messageInfo_LrnRes.Size(m)
}
func (m *LrnRes) XXX_DiscardUnknown() {
	xxx_messageInfo_LrnRes.DiscardUnknown(m)
}

var xxx_messageInfo_LrnRes proto.InternalMessageInfo

func (m *LrnRes) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

func (m *LrnRes) GetLrn() string {
	if m != nil {
		return m.Lrn
	}
	return ""
}

func (m *LrnRes) GetOcn() string {
	if m != nil {
		return m.Ocn
	}
	return ""
}

func (m *LrnRes) GetPtype() string {
	if m != nil {
		return m.Ptype
	}
	return ""
}

func (m *LrnRes) GetBname() string {
	if m != nil {
		return m.Bname
	}
	return ""
}

func (m *LrnRes) GetCompany() string {
	if m != nil {
		return m.Company
	}
	return ""
}

func (m *LrnRes) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *LrnRes) GetSt() string {
	if m != nil {
		return m.St
	}
	return ""
}

func (m *LrnRes) GetCt() string {
	if m != nil {
		return m.Ct
	}
	return ""
}

func (m *LrnRes) GetZips() []string {
	if m != nil {
		return m.Zips
	}
	return nil
}

func (m *LrnRes) GetTz() string {
	if m != nil {
		return m.Tz
	}
	return ""
}

func (m *LrnRes) GetDst() string {
	if m != nil {
		return m.Dst
	}
	return ""
}

func (m *LrnRes) GetLat() string {
	if m != nil {
		return m.Lat
	}
	return ""
}

func (m *LrnRes) GetLong() string {
	if m != nil {
		return m.Long
	}
	return ""
}

func (m *LrnRes) GetLnp() int64 {
	if m != nil {
		return m.Lnp
	}
	return 0
}

func (m *LrnRes) GetLu() string {
	if m != nil {
		return m.Lu
	}
	return ""
}

type LrnsRes struct {
	Lrns                 []*LrnRes `protobuf:"bytes,1,rep,name=lrns,proto3" json:"lrns,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *LrnsRes) Reset()         { *m = LrnsRes{} }
func (m *LrnsRes) String() string { return proto.CompactTextString(m) }
func (*LrnsRes) ProtoMessage()    {}
func (*LrnsRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_lrn_4ffe75f8116196f6, []int{3}
}
func (m *LrnsRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LrnsRes.Unmarshal(m, b)
}
func (m *LrnsRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LrnsRes.Marshal(b, m, deterministic)
}
func (dst *LrnsRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LrnsRes.Merge(dst, src)
}
func (m *LrnsRes) XXX_Size() int {
	return xxx_messageInfo_LrnsRes.Size(m)
}
func (m *LrnsRes) XXX_DiscardUnknown() {
	xxx_messageInfo_LrnsRes.DiscardUnknown(m)
}

var xxx_messageInfo_LrnsRes proto.InternalMessageInfo

func (m *LrnsRes) GetLrns() []*LrnRes {
	if m != nil {
		return m.Lrns
	}
	return nil
}

func init() {
	proto.RegisterType((*DidReq)(nil), "com.ytel.common.grpc.lnp.lrn.DidReq")
	proto.RegisterType((*DidsReq)(nil), "com.ytel.common.grpc.lnp.lrn.DidsReq")
	proto.RegisterType((*LrnRes)(nil), "com.ytel.common.grpc.lnp.lrn.LrnRes")
	proto.RegisterType((*LrnsRes)(nil), "com.ytel.common.grpc.lnp.lrn.LrnsRes")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LrnServiceClient is the client API for LrnService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LrnServiceClient interface {
	FindByDid(ctx context.Context, in *DidReq, opts ...grpc.CallOption) (*LrnRes, error)
	FindByDids(ctx context.Context, in *DidsReq, opts ...grpc.CallOption) (*LrnsRes, error)
	FindByStreamDid(ctx context.Context, opts ...grpc.CallOption) (LrnService_FindByStreamDidClient, error)
}

type lrnServiceClient struct {
	cc *grpc.ClientConn
}

func NewLrnServiceClient(cc *grpc.ClientConn) LrnServiceClient {
	return &lrnServiceClient{cc}
}

func (c *lrnServiceClient) FindByDid(ctx context.Context, in *DidReq, opts ...grpc.CallOption) (*LrnRes, error) {
	out := new(LrnRes)
	err := c.cc.Invoke(ctx, "/com.ytel.common.grpc.lnp.lrn.LrnService/findByDid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lrnServiceClient) FindByDids(ctx context.Context, in *DidsReq, opts ...grpc.CallOption) (*LrnsRes, error) {
	out := new(LrnsRes)
	err := c.cc.Invoke(ctx, "/com.ytel.common.grpc.lnp.lrn.LrnService/findByDids", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lrnServiceClient) FindByStreamDid(ctx context.Context, opts ...grpc.CallOption) (LrnService_FindByStreamDidClient, error) {
	stream, err := c.cc.NewStream(ctx, &_LrnService_serviceDesc.Streams[0], "/com.ytel.common.grpc.lnp.lrn.LrnService/findByStreamDid", opts...)
	if err != nil {
		return nil, err
	}
	x := &lrnServiceFindByStreamDidClient{stream}
	return x, nil
}

type LrnService_FindByStreamDidClient interface {
	Send(*DidReq) error
	Recv() (*LrnRes, error)
	grpc.ClientStream
}

type lrnServiceFindByStreamDidClient struct {
	grpc.ClientStream
}

func (x *lrnServiceFindByStreamDidClient) Send(m *DidReq) error {
	return x.ClientStream.SendMsg(m)
}

func (x *lrnServiceFindByStreamDidClient) Recv() (*LrnRes, error) {
	m := new(LrnRes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// LrnServiceServer is the server API for LrnService service.
type LrnServiceServer interface {
	FindByDid(context.Context, *DidReq) (*LrnRes, error)
	FindByDids(context.Context, *DidsReq) (*LrnsRes, error)
	FindByStreamDid(LrnService_FindByStreamDidServer) error
}

func RegisterLrnServiceServer(s *grpc.Server, srv LrnServiceServer) {
	s.RegisterService(&_LrnService_serviceDesc, srv)
}

func _LrnService_FindByDid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DidReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LrnServiceServer).FindByDid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.ytel.common.grpc.lnp.lrn.LrnService/FindByDid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LrnServiceServer).FindByDid(ctx, req.(*DidReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _LrnService_FindByDids_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DidsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LrnServiceServer).FindByDids(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.ytel.common.grpc.lnp.lrn.LrnService/FindByDids",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LrnServiceServer).FindByDids(ctx, req.(*DidsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _LrnService_FindByStreamDid_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(LrnServiceServer).FindByStreamDid(&lrnServiceFindByStreamDidServer{stream})
}

type LrnService_FindByStreamDidServer interface {
	Send(*LrnRes) error
	Recv() (*DidReq, error)
	grpc.ServerStream
}

type lrnServiceFindByStreamDidServer struct {
	grpc.ServerStream
}

func (x *lrnServiceFindByStreamDidServer) Send(m *LrnRes) error {
	return x.ServerStream.SendMsg(m)
}

func (x *lrnServiceFindByStreamDidServer) Recv() (*DidReq, error) {
	m := new(DidReq)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _LrnService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.ytel.common.grpc.lnp.lrn.LrnService",
	HandlerType: (*LrnServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "findByDid",
			Handler:    _LrnService_FindByDid_Handler,
		},
		{
			MethodName: "findByDids",
			Handler:    _LrnService_FindByDids_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "findByStreamDid",
			Handler:       _LrnService_FindByStreamDid_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "lrn.proto",
}

func init() { proto.RegisterFile("lrn.proto", fileDescriptor_lrn_4ffe75f8116196f6) }

var fileDescriptor_lrn_4ffe75f8116196f6 = []byte{
	// 390 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x93, 0xc1, 0x6e, 0x13, 0x31,
	0x10, 0x86, 0xb5, 0x9b, 0x34, 0xe9, 0x4e, 0xa1, 0xad, 0x2c, 0x0e, 0xa3, 0x08, 0xa4, 0x28, 0xa2,
	0x52, 0x4e, 0x16, 0x2a, 0x17, 0xce, 0x25, 0xc7, 0x1c, 0xd0, 0xf6, 0x80, 0xd4, 0xdb, 0xd6, 0x36,
	0x95, 0x25, 0xef, 0xd8, 0xd8, 0x2e, 0xd2, 0xe6, 0x79, 0x78, 0x06, 0x9e, 0x0f, 0x8d, 0x1d, 0xb8,
	0x20, 0x11, 0x0e, 0xdc, 0xfe, 0xf9, 0xec, 0xf9, 0xed, 0x7f, 0xbc, 0x0b, 0x9d, 0x8b, 0x24, 0x43,
	0xf4, 0xd9, 0x8b, 0xd7, 0xca, 0x8f, 0x72, 0xca, 0xc6, 0x49, 0xe5, 0xc7, 0xd1, 0x93, 0x7c, 0x8a,
	0x41, 0x49, 0x47, 0x41, 0xba, 0x48, 0x9b, 0x15, 0x2c, 0x76, 0x56, 0xf7, 0xe6, 0xab, 0xb8, 0x86,
	0x99, 0xb6, 0x1a, 0x9b, 0x75, 0xb3, 0xed, 0x7a, 0x96, 0x9b, 0x37, 0xb0, 0xdc, 0x59, 0x9d, 0x78,
	0x51, 0xc0, 0x5c, 0x5b, 0x9d, 0xb0, 0x59, 0xcf, 0xb6, 0x5d, 0x5f, 0xf4, 0xe6, 0x47, 0x0b, 0x8b,
	0x7d, 0xa4, 0xde, 0xa4, 0x3f, 0x7b, 0x99, 0xb8, 0x48, 0xd8, 0x56, 0xe2, 0x22, 0x31, 0xf1, 0x8a,
	0x70, 0x56, 0x89, 0x57, 0x24, 0x5e, 0xc1, 0x59, 0xc8, 0x53, 0x30, 0x38, 0x2f, 0xac, 0x16, 0x4c,
	0x1f, 0x69, 0x18, 0x0d, 0x9e, 0x55, 0x5a, 0x0a, 0x81, 0xb0, 0x54, 0x7e, 0x0c, 0x03, 0x4d, 0xb8,
	0x28, 0xfc, 0x57, 0xc9, 0x57, 0x53, 0x36, 0x4f, 0xb8, 0x2c, 0xb8, 0x68, 0x71, 0x09, 0x6d, 0xca,
	0x78, 0x5e, 0x48, 0x9b, 0x32, 0xd7, 0x2a, 0x63, 0x57, 0x6b, 0x95, 0xb9, 0xe7, 0x60, 0x43, 0x42,
	0xa8, 0x71, 0x58, 0xf3, 0x9e, 0x7c, 0xc0, 0x8b, 0xba, 0x27, 0x1f, 0x4a, 0xa6, 0x94, 0xf1, 0xc5,
	0x31, 0x53, 0xca, 0x25, 0xd3, 0x90, 0xf1, 0xe5, 0x31, 0xd3, 0x50, 0x7c, 0x9c, 0xa7, 0x27, 0xbc,
	0xac, 0x67, 0xb3, 0x2e, 0xbb, 0x28, 0xe0, 0xd5, 0xba, 0xd9, 0xce, 0x7a, 0x96, 0xec, 0xec, 0x9e,
	0xf1, 0xba, 0x3a, 0xbb, 0xe7, 0xcd, 0x47, 0x58, 0xee, 0x23, 0x25, 0x1e, 0xdc, 0x07, 0x98, 0xbb,
	0x48, 0x75, 0xae, 0x17, 0xb7, 0x6f, 0xe5, 0xdf, 0xde, 0x4a, 0xd6, 0x61, 0xf7, 0xa5, 0xe3, 0xf6,
	0x7b, 0x0b, 0xb0, 0x8f, 0x74, 0x6f, 0xe2, 0x37, 0xab, 0x8c, 0xf8, 0x0c, 0xdd, 0x17, 0x4b, 0xfa,
	0x6e, 0xda, 0x59, 0x2d, 0x4e, 0xf8, 0xd4, 0x07, 0x5f, 0xfd, 0xd3, 0x69, 0xe2, 0x01, 0xe0, 0xb7,
	0x71, 0x12, 0x37, 0x27, 0x9d, 0xf9, 0x73, 0x59, 0xdd, 0x9c, 0xb4, 0x2e, 0xe9, 0x07, 0xb8, 0xaa,
	0xde, 0xf7, 0x39, 0x9a, 0x61, 0xfc, 0xcf, 0x57, 0xdf, 0x36, 0xef, 0x9a, 0xbb, 0xf3, 0x4f, 0xcd,
	0xc3, 0x9c, 0x17, 0x1f, 0x17, 0xe5, 0x77, 0x78, 0xff, 0x33, 0x00, 0x00, 0xff, 0xff, 0xc2, 0xc1,
	0x22, 0xf2, 0x1b, 0x03, 0x00, 0x00,
}
