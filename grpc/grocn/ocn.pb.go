// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ocn.proto

package grocn

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type OcnReq struct {
	Ocn                  string   `protobuf:"bytes,1,opt,name=ocn,proto3" json:"ocn,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OcnReq) Reset()         { *m = OcnReq{} }
func (m *OcnReq) String() string { return proto.CompactTextString(m) }
func (*OcnReq) ProtoMessage()    {}
func (*OcnReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ocn_9a793de0bddf2ab2, []int{0}
}
func (m *OcnReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OcnReq.Unmarshal(m, b)
}
func (m *OcnReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OcnReq.Marshal(b, m, deterministic)
}
func (dst *OcnReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OcnReq.Merge(dst, src)
}
func (m *OcnReq) XXX_Size() int {
	return xxx_messageInfo_OcnReq.Size(m)
}
func (m *OcnReq) XXX_DiscardUnknown() {
	xxx_messageInfo_OcnReq.DiscardUnknown(m)
}

var xxx_messageInfo_OcnReq proto.InternalMessageInfo

func (m *OcnReq) GetOcn() string {
	if m != nil {
		return m.Ocn
	}
	return ""
}

type OcnsReq struct {
	Ocns                 []string `protobuf:"bytes,1,rep,name=ocns,proto3" json:"ocns,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OcnsReq) Reset()         { *m = OcnsReq{} }
func (m *OcnsReq) String() string { return proto.CompactTextString(m) }
func (*OcnsReq) ProtoMessage()    {}
func (*OcnsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ocn_9a793de0bddf2ab2, []int{1}
}
func (m *OcnsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OcnsReq.Unmarshal(m, b)
}
func (m *OcnsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OcnsReq.Marshal(b, m, deterministic)
}
func (dst *OcnsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OcnsReq.Merge(dst, src)
}
func (m *OcnsReq) XXX_Size() int {
	return xxx_messageInfo_OcnsReq.Size(m)
}
func (m *OcnsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_OcnsReq.DiscardUnknown(m)
}

var xxx_messageInfo_OcnsReq proto.InternalMessageInfo

func (m *OcnsReq) GetOcns() []string {
	if m != nil {
		return m.Ocns
	}
	return nil
}

type OcnRes struct {
	Ocn                  string   `protobuf:"bytes,1,opt,name=ocn,proto3" json:"ocn,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Neca                 string   `protobuf:"bytes,3,opt,name=neca,proto3" json:"neca,omitempty"`
	Company              string   `protobuf:"bytes,4,opt,name=company,proto3" json:"company,omitempty"`
	CommonName           string   `protobuf:"bytes,5,opt,name=commonName,proto3" json:"commonName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OcnRes) Reset()         { *m = OcnRes{} }
func (m *OcnRes) String() string { return proto.CompactTextString(m) }
func (*OcnRes) ProtoMessage()    {}
func (*OcnRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_ocn_9a793de0bddf2ab2, []int{2}
}
func (m *OcnRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OcnRes.Unmarshal(m, b)
}
func (m *OcnRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OcnRes.Marshal(b, m, deterministic)
}
func (dst *OcnRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OcnRes.Merge(dst, src)
}
func (m *OcnRes) XXX_Size() int {
	return xxx_messageInfo_OcnRes.Size(m)
}
func (m *OcnRes) XXX_DiscardUnknown() {
	xxx_messageInfo_OcnRes.DiscardUnknown(m)
}

var xxx_messageInfo_OcnRes proto.InternalMessageInfo

func (m *OcnRes) GetOcn() string {
	if m != nil {
		return m.Ocn
	}
	return ""
}

func (m *OcnRes) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *OcnRes) GetNeca() string {
	if m != nil {
		return m.Neca
	}
	return ""
}

func (m *OcnRes) GetCompany() string {
	if m != nil {
		return m.Company
	}
	return ""
}

func (m *OcnRes) GetCommonName() string {
	if m != nil {
		return m.CommonName
	}
	return ""
}

type OcnsRes struct {
	Ocns                 []*OcnRes `protobuf:"bytes,1,rep,name=ocns,proto3" json:"ocns,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *OcnsRes) Reset()         { *m = OcnsRes{} }
func (m *OcnsRes) String() string { return proto.CompactTextString(m) }
func (*OcnsRes) ProtoMessage()    {}
func (*OcnsRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_ocn_9a793de0bddf2ab2, []int{3}
}
func (m *OcnsRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OcnsRes.Unmarshal(m, b)
}
func (m *OcnsRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OcnsRes.Marshal(b, m, deterministic)
}
func (dst *OcnsRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OcnsRes.Merge(dst, src)
}
func (m *OcnsRes) XXX_Size() int {
	return xxx_messageInfo_OcnsRes.Size(m)
}
func (m *OcnsRes) XXX_DiscardUnknown() {
	xxx_messageInfo_OcnsRes.DiscardUnknown(m)
}

var xxx_messageInfo_OcnsRes proto.InternalMessageInfo

func (m *OcnsRes) GetOcns() []*OcnRes {
	if m != nil {
		return m.Ocns
	}
	return nil
}

func init() {
	proto.RegisterType((*OcnReq)(nil), "com.ytel.common.grpc.lnp.ocn.OcnReq")
	proto.RegisterType((*OcnsReq)(nil), "com.ytel.common.grpc.lnp.ocn.OcnsReq")
	proto.RegisterType((*OcnRes)(nil), "com.ytel.common.grpc.lnp.ocn.OcnRes")
	proto.RegisterType((*OcnsRes)(nil), "com.ytel.common.grpc.lnp.ocn.OcnsRes")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OcnServiceClient is the client API for OcnService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OcnServiceClient interface {
	FindByOcn(ctx context.Context, in *OcnReq, opts ...grpc.CallOption) (*OcnRes, error)
	FindByOcns(ctx context.Context, in *OcnsReq, opts ...grpc.CallOption) (*OcnsRes, error)
}

type ocnServiceClient struct {
	cc *grpc.ClientConn
}

func NewOcnServiceClient(cc *grpc.ClientConn) OcnServiceClient {
	return &ocnServiceClient{cc}
}

func (c *ocnServiceClient) FindByOcn(ctx context.Context, in *OcnReq, opts ...grpc.CallOption) (*OcnRes, error) {
	out := new(OcnRes)
	err := c.cc.Invoke(ctx, "/com.ytel.common.grpc.lnp.ocn.OcnService/findByOcn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ocnServiceClient) FindByOcns(ctx context.Context, in *OcnsReq, opts ...grpc.CallOption) (*OcnsRes, error) {
	out := new(OcnsRes)
	err := c.cc.Invoke(ctx, "/com.ytel.common.grpc.lnp.ocn.OcnService/findByOcns", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OcnServiceServer is the server API for OcnService service.
type OcnServiceServer interface {
	FindByOcn(context.Context, *OcnReq) (*OcnRes, error)
	FindByOcns(context.Context, *OcnsReq) (*OcnsRes, error)
}

func RegisterOcnServiceServer(s *grpc.Server, srv OcnServiceServer) {
	s.RegisterService(&_OcnService_serviceDesc, srv)
}

func _OcnService_FindByOcn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OcnReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OcnServiceServer).FindByOcn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.ytel.common.grpc.lnp.ocn.OcnService/FindByOcn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OcnServiceServer).FindByOcn(ctx, req.(*OcnReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _OcnService_FindByOcns_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OcnsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OcnServiceServer).FindByOcns(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.ytel.common.grpc.lnp.ocn.OcnService/FindByOcns",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OcnServiceServer).FindByOcns(ctx, req.(*OcnsReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _OcnService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.ytel.common.grpc.lnp.ocn.OcnService",
	HandlerType: (*OcnServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "findByOcn",
			Handler:    _OcnService_FindByOcn_Handler,
		},
		{
			MethodName: "findByOcns",
			Handler:    _OcnService_FindByOcns_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ocn.proto",
}

func init() { proto.RegisterFile("ocn.proto", fileDescriptor_ocn_9a793de0bddf2ab2) }

var fileDescriptor_ocn_9a793de0bddf2ab2 = []byte{
	// 258 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0x41, 0x4b, 0x03, 0x31,
	0x10, 0x85, 0x89, 0x5d, 0x5b, 0x77, 0xbc, 0xc8, 0x9c, 0xc2, 0xa2, 0x52, 0x16, 0x85, 0x9e, 0x72,
	0xa8, 0x17, 0xcf, 0xf5, 0xee, 0xca, 0x7a, 0x10, 0x7a, 0x5b, 0xc7, 0x28, 0x85, 0x66, 0x26, 0xdd,
	0x2c, 0xc2, 0x82, 0x7f, 0xce, 0x7f, 0x26, 0xc9, 0x5a, 0x29, 0x08, 0xba, 0xb7, 0x97, 0x6f, 0xe6,
	0x4d, 0xde, 0x24, 0x90, 0x0b, 0xb1, 0xf1, 0xad, 0x74, 0x82, 0xe7, 0x24, 0xce, 0xf4, 0x9d, 0xdd,
	0x1a, 0x12, 0xe7, 0x84, 0xcd, 0x5b, 0xeb, 0xc9, 0x6c, 0xd9, 0x1b, 0x21, 0x2e, 0x0b, 0x98, 0x56,
	0xc4, 0xb5, 0xdd, 0xe1, 0x19, 0x4c, 0x84, 0x58, 0xab, 0xb9, 0x5a, 0xe4, 0x75, 0x94, 0xe5, 0x05,
	0xcc, 0x2a, 0xe2, 0x10, 0x8b, 0x08, 0x99, 0x10, 0x07, 0xad, 0xe6, 0x93, 0x45, 0x5e, 0x27, 0x5d,
	0x7e, 0x7c, 0x5b, 0xc3, 0x6f, 0x6b, 0xec, 0xef, 0x7a, 0x6f, 0xf5, 0x51, 0x42, 0x49, 0x47, 0xc6,
	0x96, 0x1a, 0x3d, 0x19, 0x58, 0xd4, 0xa8, 0x61, 0x46, 0xe2, 0x7c, 0xc3, 0xbd, 0xce, 0x12, 0xde,
	0x1f, 0xf1, 0x12, 0x60, 0xc8, 0x7b, 0xdf, 0x38, 0xab, 0x8f, 0x53, 0xf1, 0x80, 0x94, 0x77, 0xfb,
	0x70, 0x01, 0x6f, 0x0f, 0xc2, 0x9d, 0x2e, 0xaf, 0xcc, 0x5f, 0x0b, 0x9b, 0x21, 0xf2, 0xb0, 0xc2,
	0xf2, 0x53, 0x01, 0x54, 0xc4, 0x8f, 0xb6, 0x7d, 0xdf, 0x90, 0xc5, 0x27, 0xc8, 0x5f, 0x37, 0xfc,
	0xb2, 0xea, 0x2b, 0x62, 0x1c, 0x33, 0x67, 0x57, 0x8c, 0xba, 0x0d, 0xd7, 0x00, 0x3f, 0x83, 0x03,
	0x5e, 0xff, 0xeb, 0x89, 0x6f, 0x5e, 0x8c, 0x6a, 0x0b, 0xab, 0x93, 0x07, 0xb5, 0xce, 0x62, 0xe5,
	0x79, 0x9a, 0x3e, 0xfc, 0xe6, 0x2b, 0x00, 0x00, 0xff, 0xff, 0x78, 0x79, 0xb9, 0x5e, 0xfd, 0x01,
	0x00, 0x00,
}
